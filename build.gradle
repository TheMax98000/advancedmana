plugins {
    id 'fabric-loom' version '1.3.8'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    // ComputerCraft repository
    maven {
        name = "SquidDev"
        url = "https://squiddev.cc/maven/"
    }
    // Botania repository pour la compatibilité mana
    maven {
        name = 'ModMaven'
        url = 'https://modmaven.dev'
    }
}

loom {
    splitEnvironmentSourceSets()

    mods {
        advancedmana {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }
}

// Configuration explicite des sources
sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}

dependencies {
    // Fabric
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // ComputerCraft - Utilisation de la version Fabric
    modImplementation "cc.tweaked:cc-tweaked-1.20.1-fabric:${project.computercraft_version}"

    // Botania pour l'interface mana (optionnel) - sans les dépendances transitives
    modCompileOnly("vazkii.botania:Botania:${project.botania_version}") {
        transitive = false
    }
}

processResources {
    inputs.property "version", project.version
    
    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}"}
    }
}

jar {
    from sourceSets.main.output
}